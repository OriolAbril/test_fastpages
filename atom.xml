<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.1">Jekyll</generator><link href="https://oriolabril.github.io/test_fastpages/atom.xml" rel="self" type="application/atom+xml" /><link href="https://oriolabril.github.io/test_fastpages/" rel="alternate" type="text/html" /><updated>2023-04-12T03:19:58-05:00</updated><id>https://oriolabril.github.io/test_fastpages/atom.xml</id><title type="html">Oriol unraveled</title><subtitle>Personal website of an enthusiast about open source and statistics</subtitle><entry><title type="html">Introduction to ArviZ: InferenceData objects</title><link href="https://oriolabril.github.io/test_fastpages/arviz/inferencedata/data/2020/04/30/InferenceData.html" rel="alternate" type="text/html" title="Introduction to ArviZ: InferenceData objects" /><published>2020-04-30T00:00:00-05:00</published><updated>2020-04-30T00:00:00-05:00</updated><id>https://oriolabril.github.io/test_fastpages/arviz/inferencedata/data/2020/04/30/InferenceData</id><content type="html" xml:base="https://oriolabril.github.io/test_fastpages/arviz/inferencedata/data/2020/04/30/InferenceData.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-04-30-InferenceData.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="About">About<a class="anchor-link" href="#About"> </a></h1><p>This notebook is an introduction to <code>InferenceData</code> objects and their role in ArviZ. It aims to be as hands-on as possible, using examples to cover different use cases of the data in each group, examples on how to combine several <code>InferenceData</code> objects and so on.</p>
<p>The key idea behind <code>InferenceData</code> objects is to centralize and store all data relevant to a specific Bayesian inference run; from <code>observed_data</code> to <code>predictions</code> going through <code>prior</code> and <code>sample_stats</code>. The goal is therefore to both ease exploration and visualization of Bayesian inference results and to ease their sharing. Hence, ArviZ also provides several converter functions to transform results from common inference libraries such as PyMC3, PyStan or Pyro to <code>InferenceData</code>. In the future, we'll dedicate one post to each converter function, but before, we have to make sure the conversion process is worth it!</p>

</div>
</div>
</div>
</div>]]></content><author><name>Oriol Abril</name></author><category term="arviz" /><category term="InferenceData" /><category term="data" /><summary type="html"><![CDATA[Why should you care about `InferenceData` if `az.xyz(pymc3_trace)` and `az.xyz(pystan_fit)` already work?]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://oriolabril.github.io/test_fastpages/images/InferenceDataStructure.png" /><media:content medium="image" url="https://oriolabril.github.io/test_fastpages/images/InferenceDataStructure.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ArviZ customization: `plot_trace`</title><link href="https://oriolabril.github.io/test_fastpages/arviz/visualization/plotting/2020/04/30/plot-trace.html" rel="alternate" type="text/html" title="ArviZ customization: `plot_trace`" /><published>2020-04-30T00:00:00-05:00</published><updated>2020-04-30T00:00:00-05:00</updated><id>https://oriolabril.github.io/test_fastpages/arviz/visualization/plotting/2020/04/30/plot-trace</id><content type="html" xml:base="https://oriolabril.github.io/test_fastpages/arviz/visualization/plotting/2020/04/30/plot-trace.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-04-30-plot-trace.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

</div>]]></content><author><name>Oriol Abril</name></author><category term="arviz" /><category term="visualization" /><category term="plotting" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://oriolabril.github.io/test_fastpages/images/InferenceDataStructure.png" /><media:content medium="image" url="https://oriolabril.github.io/test_fastpages/images/InferenceDataStructure.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ArviZ customization with rcParams</title><link href="https://oriolabril.github.io/test_fastpages/arviz/customization/rcparams/2020/04/30/rcParams.html" rel="alternate" type="text/html" title="ArviZ customization with rcParams" /><published>2020-04-30T00:00:00-05:00</published><updated>2020-04-30T00:00:00-05:00</updated><id>https://oriolabril.github.io/test_fastpages/arviz/customization/rcparams/2020/04/30/rcParams</id><content type="html" xml:base="https://oriolabril.github.io/test_fastpages/arviz/customization/rcparams/2020/04/30/rcParams.html"><![CDATA[<!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-04-30-rcParams.ipynb
-->

<div class="container" id="notebook-container">
        
    
    
<div class="cell border-box-sizing code_cell rendered">

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Comments are not enabled for the blog, to inquiry further about the contents of the post, ask on <a href="https://github.com/arviz-devs/arviz/issues">ArviZ Issues</a> or <a href="https://discourse.pymc.io/">PyMC Discourse</a></p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="About">About<a class="anchor-link" href="#About"> </a></h1><p>ArviZ not only builds on top of matplotlib's <code>rcParams</code> but also adds its own rcParams instance to handle specific settings. This post will only graze matplotlib's rcParams, which are already detailed in <a href="https://matplotlib.org/1.4.1/users/customizing.html">matplotlib's docs</a>; it will dive into specific ArviZ rcParams.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Introduction">Introduction<a class="anchor-link" href="#Introduction"> </a></h1><p>Paraphrasing the description on rcParams in the documentation of matplotlib:</p>
<blockquote><p>ArviZ uses arvizrc configuration files to customize all kinds of properties, which we call rcParams. You can control the defaults of many properties in ArviZ:data loading mode (lazy or eager), automatically showing generated plots, the default information criteria and so on.
There are several ways of modifying <code>arviz.rcParams</code> instance, each of them targeted to specific needs.</p>
</blockquote>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="Customizing-ArviZ">Customizing ArviZ<a class="anchor-link" href="#Customizing-ArviZ"> </a></h1>
</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="arvizrc-file">arvizrc file<a class="anchor-link" href="#arvizrc-file"> </a></h2><p>To define default values on a per user or per project basis, <code>arvizrc</code> file should be used. When imported, ArviZ search for an <code>arvizrc</code> file in several locations sorted below by priority:</p>
<ul>
<li><code>$PWD/arvizrc</code></li>
<li><code>$ARVIZ_DATA/arvizrc</code></li>
<li>On Linux,<ul>
<li><code>$XDG_CONFIG_HOME/arviz/arvizrc</code> (if <code>$XDG_CONFIG_HOME</code>
is defined)</li>
<li>or <code>$HOME/.config/arviz/arvizrc</code> (if <code>$XDG_CONFIG_HOME</code>
is not defined)</li>
</ul>
</li>
<li>On other platforms,<ul>
<li><code>$HOME/.arviz/arvizrc</code> if <code>$HOME</code> is defined</li>
</ul>
</li>
</ul>
<p>Once one of these files is found, ArviZ stops looking and loads its configuration. If none of them are present, the values hardcoded in ArviZ codebase are used. The file used to set the default values in ArviZ can be obtained with the following command:</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="kn">import</span> <span class="nn">arviz</span> <span class="k">as</span> <span class="nn">az</span>
<span class="nb">print</span><span class="p">(</span><span class="n">az</span><span class="o">.</span><span class="n">rcparams</span><span class="o">.</span><span class="n">get_arviz_rcfile</span><span class="p">())</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>/home/oriol/.config/arviz/arvizrc
</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>ArviZ has loaded a file used to set defaults on a per user basis. Unless I use a different rc file in the current directory or modify <code>rcParams</code> as explained above, this configuration will be automatically used every time ArviZ is imported. This can be really useful to define the favourite backend or information criterion, written once in the rc file and ArviZ automatically uses the desired values.</p>

</div>
</div>
</div>
<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="Dynamic-rc-settings">Dynamic rc settings<a class="anchor-link" href="#Dynamic-rc-settings"> </a></h2><p>To set default values on a per file or per project basis, <code>rcParams</code> can also be modified dynamically, either overwritting a specific key:</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="n">az</span><span class="o">.</span><span class="n">rcParams</span><span class="p">[</span><span class="s2">&quot;data.load&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;eager&quot;</span>
</pre></div>

    </div>
</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<p>Note that <code>rcParams</code> is the instance to be modified, exactly like in matplotlib.</p>
<p>Another option is to define a dictionary with several new defaults and update rcParams all at once.</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="n">rc</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s2">&quot;data.load&quot;</span><span class="p">:</span> <span class="s2">&quot;lazy&quot;</span><span class="p">,</span>
    <span class="s2">&quot;plot.max_subplots&quot;</span><span class="p">:</span> <span class="mi">30</span><span class="p">,</span>
    <span class="s2">&quot;stats.ic_scale&quot;</span><span class="p">:</span> <span class="s2">&quot;negative_log&quot;</span><span class="p">,</span>
    <span class="s2">&quot;plot.matplotlib.constrained_layout&quot;</span><span class="p">:</span> <span class="kc">False</span>
<span class="p">}</span>
<span class="n">az</span><span class="o">.</span><span class="n">rcParams</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">rc</span><span class="p">)</span>
</pre></div>

    </div>
</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h2 id="rc_context">rc_context<a class="anchor-link" href="#rc_context"> </a></h2><p>Eventually, to temporarily use a different set of defaults, ArviZ also has a <code>rc_context</code> function. Its main difference and advantage is that it is a context manager, therefore, all code executed inside the context will use the defaults defined by <code>rc_context</code> but once we exit the context, everything goes back to normal.</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<details class="description">
      <summary class="btn btn-sm" data-open="Hide Code" data-close="Show Code"></summary>
        <p><div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="c1">#collapse-hide</span>
<span class="n">idata</span> <span class="o">=</span> <span class="n">az</span><span class="o">.</span><span class="n">load_arviz_data</span><span class="p">(</span><span class="s2">&quot;centered_eight&quot;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="n">az</span><span class="o">.</span><span class="n">summary</span><span class="p">(</span><span class="n">idata</span><span class="p">,</span> <span class="n">var_names</span><span class="o">=</span><span class="s2">&quot;theta&quot;</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s2">&quot;stats&quot;</span><span class="p">))</span>
<span class="k">with</span> <span class="n">az</span><span class="o">.</span><span class="n">rc_context</span><span class="p">({</span><span class="s2">&quot;data.index_origin&quot;</span><span class="p">:</span> <span class="mi">1</span><span class="p">}):</span>
    <span class="nb">print</span><span class="p">(</span><span class="n">az</span><span class="o">.</span><span class="n">summary</span><span class="p">(</span><span class="n">idata</span><span class="p">,</span> <span class="n">var_names</span><span class="o">=</span><span class="s2">&quot;theta&quot;</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s2">&quot;stats&quot;</span><span class="p">))</span>
<span class="nb">print</span><span class="p">(</span><span class="n">az</span><span class="o">.</span><span class="n">summary</span><span class="p">(</span><span class="n">idata</span><span class="p">,</span> <span class="n">var_names</span><span class="o">=</span><span class="s2">&quot;theta&quot;</span><span class="p">,</span> <span class="n">kind</span><span class="o">=</span><span class="s2">&quot;stats&quot;</span><span class="p">))</span>
</pre></div>

    </div>
</div>
</div>
</p>
    </details>
<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>           mean     sd  hpd_3%  hpd_97%
theta[0]  6.026  5.782  -3.707   17.337
theta[1]  4.724  4.736  -4.039   13.999
theta[2]  3.576  5.559  -6.779   13.838
theta[3]  4.478  4.939  -5.528   13.392
theta[4]  3.064  4.642  -5.972   11.547
theta[5]  3.821  4.979  -5.507   13.232
theta[6]  6.250  5.436  -3.412   16.920
theta[7]  4.544  5.521  -5.665   15.266
           mean     sd  hpd_3%  hpd_97%
theta[1]  6.026  5.782  -3.707   17.337
theta[2]  4.724  4.736  -4.039   13.999
theta[3]  3.576  5.559  -6.779   13.838
theta[4]  4.478  4.939  -5.528   13.392
theta[5]  3.064  4.642  -5.972   11.547
theta[6]  3.821  4.979  -5.507   13.232
theta[7]  6.250  5.436  -3.412   16.920
theta[8]  4.544  5.521  -5.665   15.266
           mean     sd  hpd_3%  hpd_97%
theta[0]  6.026  5.782  -3.707   17.337
theta[1]  4.724  4.736  -4.039   13.999
theta[2]  3.576  5.559  -6.779   13.838
theta[3]  4.478  4.939  -5.528   13.392
theta[4]  3.064  4.642  -5.972   11.547
theta[5]  3.821  4.979  -5.507   13.232
theta[6]  6.250  5.436  -3.412   16.920
theta[7]  4.544  5.521  -5.665   15.266
</pre>
</div>
</div>

</div>
</div>

</div>
    

<div class="cell border-box-sizing text_cell rendered"><div class="inner_cell">
<div class="text_cell_render border-box-sizing rendered_html">
<h1 id="ArviZ-default-settings">ArviZ default settings<a class="anchor-link" href="#ArviZ-default-settings"> </a></h1><p>Here are the default ArviZ settings (also available in <a href="https://github.com/arviz-devs/arviz/blob/master/arvizrc.template">GitHub</a>)</p>

</div>
</div>
</div>
    
    
<div class="cell border-box-sizing code_cell rendered">
<div class="input">

<div class="inner_cell">
    <div class="input_area">
<div class=" highlight hl-ipython3"><pre><span></span><span class="kn">from</span> <span class="nn">arviz.rcparams</span> <span class="kn">import</span> <span class="n">RcParams</span><span class="p">,</span> <span class="n">defaultParams</span>

<span class="nb">print</span><span class="p">(</span><span class="n">RcParams</span><span class="p">([(</span><span class="n">key</span><span class="p">,</span> <span class="n">default</span><span class="p">)</span> <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="p">(</span><span class="n">default</span><span class="p">,</span> <span class="n">_</span><span class="p">)</span> <span class="ow">in</span> <span class="n">defaultParams</span><span class="o">.</span><span class="n">items</span><span class="p">()]))</span>
</pre></div>

    </div>
</div>
</div>

<div class="output_wrapper">
<div class="output">

<div class="output_area">

<div class="output_subarea output_stream output_stdout output_text">
<pre>data.http_protocol    : https
data.index_origin     : 0
data.load             : lazy
data.save_warmup      : False
plot.backend          : matplotlib
plot.bokeh.bounds_x_range: auto
plot.bokeh.bounds_y_range: auto
plot.bokeh.figure.dpi : 60
plot.bokeh.figure.height: 500
plot.bokeh.figure.width: 500
plot.bokeh.layout.order: default
plot.bokeh.layout.sizing_mode: fixed
plot.bokeh.layout.toolbar_location: above
plot.bokeh.marker     : Cross
plot.bokeh.output_backend: webgl
plot.bokeh.show       : True
plot.bokeh.tools      : reset,pan,box_zoom,wheel_zoom,lasso_select,undo,save,hover
plot.matplotlib.constrained_layout: True
plot.matplotlib.show  : False
plot.max_subplots     : 40
plot.point_estimate   : mean
stats.credible_interval: 0.94
stats.ic_scale        : log
stats.information_criterion: loo
</pre>
</div>
</div>

</div>
</div>

</div>
    

</div>]]></content><author><name>Oriol Abril</name></author><category term="arviz" /><category term="customization" /><category term="rcparams" /><summary type="html"><![CDATA[Use ArviZ rcParams to get sensible defaults right out of the box]]></summary></entry></feed>